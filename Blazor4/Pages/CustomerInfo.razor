@page "/customer"
@using Blazor4.Data
@inject ICustomerService customerService
@inject MudBlazor.ISnackbar snackBar

<h3>Customer Info</h3>

<MudCard Elevation="10">
    <MudGrid>
        <MudItem xs="4">
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.h6">Add / Edit Customer</MudText>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent>
                <MudTextField @bind-Value="customer.FirsName" Label="First Name" Variant="Variant.Text" Margin="Margin.Normal"></MudTextField>
                <MudTextField @bind-Value="customer.LastName" Label="Last Name" Variant="Variant.Text" Margin="Margin.Normal"></MudTextField>
                <MudTextField @bind-Value="customer.Phone" Label="Phone" Variant="Variant.Text" Margin="Margin.Normal"></MudTextField>
                <br/>
                <MudButton Variant="Variant.Filled" Color="Color.Success" OnClick="Save">Save Customer</MudButton>
            </MudCardContent>
        </MudItem>
    </MudGrid>
</MudCard>
<br/>
<MudTable Elevation="10" Items="GetAllCustomer()" Filter="new Func<Customer, bool>(Search)" @bind-customer="customer" Hover="@hover" Dense="@dense">
    <ToolBarContent>
        <MudText Typo="Typo.h6">Customers</MudText>
        <MudToolBarSpacer/>
        <MudTextField @bind-Value="searchstring" Placeholder="Search Customer..."
                      Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search"
                      IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>
    <HeaderContent>
        <MudTh>ID</MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<Customer, object>(x=> x.FirsName)" InitialDirection="SortDirection.Ascending">First Name</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<Customer, object>(x=> x.LastName)" >Last Name</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<Customer, object>(x=> x.Phone)" >Phone</MudTableSortLabel></MudTh>
        <MudTh>Action</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Id">@context.Id</MudTd>
        <MudTd DataLabel="FirstName">@context.FirsName</MudTd>
        <MudTd DataLabel="LastName">@context.LastName</MudTd>
        <MudTd DataLabel="Phone">@context.Phone</MudTd>
        <MudTd DataLabel="">
            <MudFab @onclick="@(()=> Edit(context.Id))" Color="Color.Primary" Icon="@Icons.Material.Filled.Edit" Size="Size.Small" IconSize="Size.Small"/>
            <MudFab @onclick="@(()=> Delete(context.Id))" Color="Color.Primary" Icon="@Icons.Material.Filled.Delete" Size="Size.Small" IconSize="Size.Small" />
        </MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager PageSizeOptions="new int[] { 5,10,20,50,100}"/>
    </PagerContent>

</MudTable>

<MudSwitch @bind-Checked="@hover" Color="Color.Primary">Hover</MudSwitch>
<MudSwitch @bind-Checked="@dense" Color="Color.Secondary">Dense</MudSwitch>

@code {
    private bool hover = true;
    private bool dense = true;
    private string searchstring = "";
    private Customer customer = new Customer();
    private List<Customer> customers = new List<Customer>();

    protected override async Task OnInitializedAsync()
    {
        //return base.OnInitializedAsync();
        GetAllCustomer();
    }

    private List<Customer> GetAllCustomer()
    {
        customers = customerService.GetCustomers();
        return customers;

    }

    private bool Search(Customer customer)
    {
        if (customer.FirsName != null && customer.LastName != null && customer.Phone != null &&
            (customer.FirsName.Contains(searchstring, StringComparison.OrdinalIgnoreCase) ||
            customer.LastName.Contains(searchstring, StringComparison.OrdinalIgnoreCase) ||
            customer.Phone.Contains(searchstring, StringComparison.OrdinalIgnoreCase)))
        {
            return true;

        } else {
            return false;
        }


    }

    private void Save()
    {
        customerService.SaveCustomer(customer);
        customer = new Customer();
        snackBar.Add("Customer Save Successfully", Severity.Success);
        GetAllCustomer();


    }

    private void Edit(int id)
    {
        customer = customers.FirstOrDefault(c => c.Id == id);

    }

    private void Delete(int id)
    {
        customerService.DeleteCustomer(id);
        snackBar.Add("Customer Delete Successfully", Severity.Success);
        GetAllCustomer();
    }


}
